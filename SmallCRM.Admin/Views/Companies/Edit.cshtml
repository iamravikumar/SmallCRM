@model SmallCRM.Admin.Models.CompanyViewModel

@{
    ViewBag.Title = "Düzenle";
}

<h2>Düzenle</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Firma</h4>
        <hr />

        <div class="row">
            <div class="col-md-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MainCompanyId, "Ana Firma", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownList("MainCompanyId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MainCompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompanyNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyLocation, "Firma Konumu", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompanyLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyTypeId, "Firma Türü", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownList("CompanyTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CompanyTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SectorId, "SectorId", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownList("SectorId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SectorId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AnnualIncome, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AnnualIncome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AnnualIncome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Stage, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Stage, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Stage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImkbCode, "İmkb Kodu", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ImkbCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImkbCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.OwnerShip, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.OwnerShip, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OwnerShip, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NaceCode, "Nace Kodu", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NaceCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NaceCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceAddress, "Fatura Adresi", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.InvoiceAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InvoiceAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceCountryId, "Fatura Ülkesi", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownList("InvoiceCountryId", null, htmlAttributes: new { @class = "form-control", onchange = "LoadCities(this)" })
                        @Html.ValidationMessageFor(model => model.InvoiceCountryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceCityId, "Fatura Şehri", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownList("InvoiceCityId", null, htmlAttributes: new { @class = "form-control", onchange = "LoadRegions(this)" })
                        @Html.ValidationMessageFor(model => model.InvoiceCityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceRegionId, "Fatura İlçesi", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownList("InvoiceRegionId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.InvoiceRegionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InvoicePostalCode, "Fatura Yeri Posta Kodu", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.InvoicePostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InvoicePostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryAddress, "Teslimat Adresi", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryCountryId, "Teslimat Ülkesi", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownList("DeliveryCountryId", null, htmlAttributes: new { @class = "form-control" ,onchange = "DeliveryLoadCities(this)"})
                        @Html.ValidationMessageFor(model => model.DeliveryCountryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryCityId, "Teslimat Şehri", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownList("DeliveryCityId", null, htmlAttributes: new { @class = "form-control" ,onchange = "DeliveryLoadRegion(this)"})
                        @Html.ValidationMessageFor(model => model.DeliveryCityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryRegionId, "Teslimat İlçesi", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownList("DeliveryRegionId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DeliveryRegionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryPostalCode, "Teslimat Yeri Posta Kodu", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DeliveryPostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeliveryPostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Kaydet" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Listeye Geri Dön", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function LoadCities(countrySelect) {
            var selectedCountryId = $(countrySelect).val();
            $("#InvoiceCityId").empty();
            $("#InvoiceCityId").append('<option value="">Şehir seçiniz</option>');
            $.post("@Url.Action("GetCities")", { countryId: selectedCountryId }, function (data) {
                $.each(data, function (index, value) {
                    $("#InvoiceCityId").append('<option value="' + value.Id + '">' + value.Name + '</option>');
                });
                LoadRegions($("#InvoiceCityId"));
            });
        }

        function LoadRegions(citySelect) {
            var selectedCityId = $(citySelect).val();
            $("#InvoiceRegionId").empty();
            $("#InvoiceRegionId").append('<option value="">İlçe seçiniz</option>');
            $.post("@Url.Action("GetRegions")", { cityId: selectedCityId }, function (data) {

                $.each(data, function (index, value) {
                    $("#InvoiceRegionId").append('<option value="' + value.Id + '">' + value.Name + '</option>');
                });
            });
        }
        function DeliveryLoadCities(countrySelect) {
            var selectedCountryId = $(countrySelect).val();
            $("#DeliveryCityId").empty();
            $("#DeliveryCityId").append('<option value="">Şehir seçiniz</option>');
            $.post("@Url.Action("GetCities")", { countryId: selectedCountryId }, function (data) {
                $.each(data, function (index, value) {
                    $("#DeliveryCityId").append('<option value="' + value.Id + '">' + value.Name + '</option>');
                });
                LoadRegions($("#DeliveryCityId"));
            });
        }

        function DeliveryLoadRegion(citySelect) {
            var selectedCityId = $(citySelect).val();
            $("#DeliveryRegionId").empty();
            $("#DeliveryRegionId").append('<option value="">İlçe seçiniz</option>');
            $.post("@Url.Action("GetRegions")", { cityId: selectedCityId }, function (data) {

                $.each(data, function (index, value) {
                    $("#DeliveryRegionId").append('<option value="' + value.Id + '">' + value.Name + '</option>');
                });
            });
        }
    </script>
}
