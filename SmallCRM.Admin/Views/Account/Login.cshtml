@using SmallCRM.Admin.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}
<section id="loginForm">
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="limiter">
            <div class="container-login100">
                <div class="wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50">
                    <form class="login100-form validate-form">
                        <span class="login100-form-title p-b-33">
                            GİRİŞ
                        </span>

                        <div class="form-group wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control input100", placeholder = "E-Posta" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                <span class="focus-input100-1"></span>
                                <span class="focus-input100-2"></span>
                            </div>
                        </div>


                        <div class="form-group wrap-input100 validate-input"data-validate="Password is required">
                           
                            <div class="input-group">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control input100", placeholder = "Şifre" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                <span class="focus-input100-1"></span>
                                <span class="focus-input100-2"></span>
                            </div>
                        </div>

                        <div class="container-login100-form-btn m-t-20">
                            <button class="login100-form-btn">
                                Sign in
                            </button>
                        </div>

                        <div class="text-center p-t-45 p-b-4">
                            <span class="txt1">
                                Forgot
                            </span>

                            <a href="#" class="txt2 hov1">
                                Username / Password?
                            </a>
                        </div>

                        <div class="text-center">
                            <span class="txt1">
                                Create an account?
                            </span>

                            <a href="#" class="txt2 hov1">
                                Sign up
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
    </section>
        @*<section id="loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h4>Use a local account to log in.</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Log in" class="btn btn-default" />
                        </div>
                    </div>
                    <p>
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                     Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>
                }
            </section>*@

        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
